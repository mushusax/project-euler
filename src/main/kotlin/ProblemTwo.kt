//
//
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//


class ProblemTwo {

    private var map: MutableMap<Int, Int> = HashMap()

    fun driver(): Int {
        fibonacci(38)
        return map.filterValues { value -> value <= 4000000 && value % 2 == 0}.values.sum()
    }

    private fun fibonacci(term: Int): Int {
        if(term <= 1) {
            return map.getOrPut(0) { 1}
        }
        else if(term == 2) {
            return map.getOrPut(1) { 2}
        }
        return map.getOrPut(term) {fibonacci(term-1) + fibonacci(term-2)}
    }
}